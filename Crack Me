Crack me : 5470E76FFFE91A100BF83F6A6BCA0737918400CF


public start ; main Program 
start proc near ; prolog 

push	0		; lpModuleName Null means exe, else name of dll
call	GetModuleHandleA ;REF MSDN "If this parameter is NULL,
                       ;GetModuleHandle returns a handle to the file used to create the calling process (.exe file)."
                       ; output in EAX obviously 
mov	ds:hInstance, eax ; copy the value to the Data Segment "4020CA"
push	0		; lpWindowName name of window
push	offset ClassName ; "No need to disasm the code!"  ;lpClassName
call	FindWindowA ; REF MSDN If lpClassName points to a string, it specifies the window class name. 
                  ;The class name can be any name registered with RegisterClass or RegisterClassEx, 
                  ;or any of the predefined control-class names. 
or	eax, eax      ; empty the EAX
jz	short loc_40101D ; Jump To 
retn


loc_40101D:
mov	ds:WndClass.style, 4003h ;
mov	ds:WndClass.lpfnWndProc, offset	WndProc
mov	ds:WndClass.cbClsExtra,	0
mov	ds:WndClass.cbWndExtra,	0
mov	eax, ds:hInstance
mov	ds:WndClass.hInstance, eax
push	64h		; lpIconName
push	eax		; hInstance
call	LoadIconA
mov	ds:WndClass.hIcon, eax
push	7F00h		; lpCursorName
push	0		; hInstance
call	LoadCursorA
mov	ds:WndClass.hCursor, eax
mov	ds:WndClass.hbrBackground, 5
mov	ds:WndClass.lpszMenuName, offset aMenu ; "MENU"
mov	ds:WndClass.lpszClassName, offset ClassName ; "No need to disasm the code!"
push	offset WndClass	; lpWndClass
call	RegisterClassA
push	0		; lpParam
push	ds:hInstance	; hInstance
push	0		; hMenu
push	0		; hWndParent
push	8000h		; nHeight
push	8000h		; nWidth
push	6Eh		; Y
push	0B4h		; X
push	0CF0000h	; dwStyle
push	offset WindowName ; "CrackMe v1.0"
push	offset ClassName ; "No need to disasm the code!"
push	0		; dwExStyle
call	CreateWindowExA
mov	ds:hWnd, eax
push	1		; nCmdShow
push	ds:hWnd		; hWnd
call	ShowWindow
push	ds:hWnd		; hWnd
call	UpdateWindow
push	1		; bErase
push	0		; lpRect
push	dword ptr [ebp+8] ; hWnd
call	InvalidateRect

loc_4010F1:		; wMsgFilterMax
push	0
push	0		; wMsgFilterMin
push	0		; hWnd
push	offset Msg	; lpMsg
call	GetMessageA
cmp	ax, 0
jz	short loc_40111D
push	offset Msg	; lpMsg
call	TranslateMessage
push	offset Msg	; lpMsg
call	DispatchMessageA
jmp	short loc_4010F1

loc_40111D:		; uExitCode
push	ds:Msg.wParam
call	ExitProcess
start endp
